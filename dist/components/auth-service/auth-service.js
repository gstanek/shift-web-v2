angular.module("myApp.authService",["LocalStorageModule","myApp.userService"]).service("authService",["$rootScope","localStorageService","userService","$auth","$http","$state","realmService","commonService","shiftService","RealmWebSocket",function(a,b,c,d,e,f,g,h,i,j){var k=this;this.validateAuthenticated=function(){var a=this.isAuthenticated();return a?!0:(f.go("home"),!1)},this.isAuthenticated=function(){var a=d.getToken(),b=this.getTokenExpirationTime(),c=new Date;if(a&&b){var e=Date.parse(b);return e>c.getTime()?!0:!1}return!1},this.isAuthorized=function(a){var b=c.getLocalUser(),d=null;return null!=b&&null!=b.persona&&(d=b.persona.roles),null!=d&&d.indexOf(a)>-1?!0:!1},this.clearUserContext=function(){d.removeToken(),c.removeLocalUser(!1),c.removeLocalCoworkers(!1),i.removeLocalShifts(!1),g.removeLocalRealm(!1),b.remove("token_expiration_time"),h.removeLocalPersonaDisplayState(!1)},this.accept_invite=function(a,b){var d="http://127.0.0.1:8000/api/v1/security/accept/",h={email:a.email,new_password:a.password,invite_code:b};e({method:"PATCH",url:d,headers:{"Content-Type":"application/json"},data:h}).then(function(a){console.log("Accept Invite Response:"+JSON.stringify(a)),k.setToken(a.data.access_token),k.setTokenExpirationTime(a.data.token_expiration_time);var b=a.data.user;c.setLocalUser(b,!1);var d=b.realms[0];g.setLocalRealm(d,!1),d&&(j.connect(),c.setLocalCoworkers(d.users,!1),i.getShifts(!0),f.go("persona"))},function(a){k.clearUserContext()})},this.signup=function(a,b){if(console.log("channel="+b),"invite"==b);else{var d="http://127.0.0.1:8000/api/v1/user/";e({method:"POST",url:d,headers:{"Content-Type":"application/json"},data:a}).then(function(a){console.log("signup response:"+JSON.stringify(a)),k.setToken(a.data.access_token),k.setTokenExpirationTime(a.data.token_expiration_time),c.setLocalUser(a.data.user,!1),g.removeLocalRealm(!1),i.removeLocalShifts(!1),f.go("persona"),h.setPersonaDisplayState()},function(a){k.clearUserContext()})}},this.login=function(b){var d=({grant_type:"password",client_id:"AiFijhEYAYAad9r6KgYAgFUN6B2dOMAuFBe60ucE",username:b.email,password:b.password},"http://127.0.0.1:8000/api/v1/security/login?email="+b.email+"&password="+b.password);return e({method:"GET",url:d,headers:{"Content-Type":"application/json"}}).then(function(b){var d={status:"success"};a.$broadcast("AUTH_SUCCESS_EVENT",d),console.log("Login Success: "+JSON.stringify(b)),k.setToken(b.data.access_token),k.setTokenExpirationTime(b.data.token_expiration_time);var e=b.data.user;c.setLocalUser(e,!1);var l=e.realms[0];g.setLocalRealm(l,!1),l&&(j.connect(),c.setLocalCoworkers(l.users,!1),i.getShifts(!0),f.go("persona")),h.setPersonaDisplayState()},function(b){console.log("Login Error: "+JSON.stringify(b));var c={status:"failure",httpStatusCode:b.status,code:b.code,message:b.detail};return a.$broadcast("AUTH_FAILURE_EVENT",c),c})},this.setToken=function(a){d.setToken(a)},this.logout=function(){var a=d.getToken(),b={grant_type:"password",client_id:"AiFijhEYAYAad9r6KgYAgFUN6B2dOMAuFBe60ucE",token:a};e({method:"POST",url:"http://localhost:8000/o/revoke_token/",headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:function(a){var b=[];for(var c in a)b.push(encodeURIComponent(c)+"="+encodeURIComponent(a[c]));return b.join("&")},data:b}).then(function(a){console.log("Success:"+JSON.stringify(a)),k.clearUserContext()},function(a){console.log("Failure:"+JSON.stringify(a))})},this.getBestDisplayName=function(){return null!=user.preferredName?user.preferredName:null!=user.firstName?user.firstName:null!=user.email?user.email:"Guest"},this.setTokenExpirationTime=function(a){b.set("token_expiration_time",a)},this.getTokenExpirationTime=function(){return b.get("token_expiration_time")},this.removeTokenExpirationTime=function(){b.remove("token_expiration_time")}}]).factory("authHttpInterceptor",["$q","$rootScope",function(a,b){return{responseError:function(c){return 401==c.status?(b.$broadcast("UNAUTHORIZED_EVENT",{rejection:c}),a.reject(c.data)):400==c.status?(b.$broadcast("BAD_REQUEST_EVENT",{rejection:c}),a.reject(c.data)):a.reject(c)}}}]).config(["$httpProvider",function(a){a.interceptors.push("authHttpInterceptor")}]);